 -------仿QQ开发文档-------
 功能需求：
 1.多个用户能同时聊天，并且可以选择1对1聊天，也可以群聊。
 2.聊天内容包括：文字，图片或文档等文件，语音。
 
 拓展（暂不考虑）：语音通话，视频通话。
 
 -------具体开发-------
 1.网络数据传输用tcp协议（只有服务端有公网ip，目前技术不支持得到客户端的公网ip）。
 2.开发语言统一使用Qt库。
 
 服务端：
 1.需要使用线程池，保证能同时处理多个请求事件。
 2.需要连接数据库，处理对应账户的需求。
 
 客户端：
 1.只需要发送信息给指定的人或群，然后接收相应的信息。
 
 -------开发日志-------
 //2024.3.16
 1.启动该项目，草拟开发文档。
 
 //2024.3.18
 1.传输Json数据。
 2.开始使用git管理项目。
 
 //2024.3.19
 1.登陆和注册客户端界面。
 
 //2024.3.22
 1.实现登陆界面。
 
 //2024.3.23
 1.实现注册界面。
 2.实现注册登陆输入格式的检查。
 3.上条加上了动画, 并且界面的接口完毕。
 
 //2024.3.24
 1.客户端与服务端交互，进行登陆注册的检验。
 
 //2024.3.27
 1.重新设计服务端结构: {
                      主线程手动创建3个子线程;
                      主线程将socket按最优路线分配给子线程管理;
                      子线程处理客户端请求可以调用线程池。 
                    }
 
 //2024.3.28
 1.客户端连接到服务端，并分配到合适的线程中管理。测试完成。
 
 //2024.3.30
 1.子线程间的通信。
 2.同一个用户连续请求服务器不会响应。原因：两个信息同时到达服务器，触发一次信号，应避免这种情况发生。
 
 //2024.4.1
 1.服务端在有连接的情况下主动关闭不能正常析构: delete强制直接释放对象，此时内部需要断开连接，造成报错，应该使用deleteLater()。
 2.账号检测(存不存在, 需要调用数据库, 并且使用qt库操作数据库)。
 
 //2024.4.3
 1.使用数据库Sqlite。
 2.手动控制服务器最大连接数, 实际会有>1的误差。利用close和open服务器的监听。
 3.注册成功insert用户信息。
 4.登陆的实现。
 
 //2024.4.6
 1.对客户端接收回复进行分类（系统崩后重装，备份落后一个版本O_o，开始重写中...）。
 2.注册的实现。
 3.登陆的实现。
 
 //2024.4.8
 1.客户端登陆成功和失败的界面。
 
 //2024.4.11
 1.初步实现个人资料界面。
 
 //2024.4.12
 1.实现个人资料界面。
 2.实现头像更换界面。
 
 //2024.4.13
 1.实现头像自定义更换的功能。（客户端+服务端）
 
 //2024.4.14
 1.客户端实现子线程发送文件。
 2.服务端目前不接收超大文件（大概传输不超过3秒）。压缩后大于10M视为超大文件。
 
 //2024.4.15
 1.登陆验证服务器传回头像信息。
 
 //2024.4.16
 1.调整客户端结构。
 
 //2024.4.17
 1.实现客户端结构的调整。
 2.小文件传输：如头像文件传输已实现。
 3.用户界面自定义个人信息：头像模块已实现。
 
 //2024.4.20
 1.用户界面自定义个人信息：个人信息更新模块已实现。
 2.客户端聊天窗口界面已实现。
 
 //2024.4.21
 1.一条聊天信息组件模板已实现。
 2.加好友界面已实现。
 3.注册后加自己好友并存入一条聊天记录已实现。
 
 //2024.4.22
 1.实现递归加载好友列表具体信息。
 
 //2024.4.23
 1.本地缓存：聊天记录最后一行。
 2.云缓存+获取云缓存：聊天记录。
 
 //2024.4.24
 1.实现加好友模块。
 
 目前正在实现的功能：
 1.统一双向加好友。
 2.核心：聊天功能。
 
 
 -------技术栈-------
 C++:
 QTextStream, QDataStream; 文本流(文本格式)和数据流(二进制格式)。
 QByteArray: 字节数组。
 QJsonDocument, QJsonObject, QJsonValue。
 enum: 枚举。用于switch(enum)。
 线程机制：socket对象在哪个线程声明，原对象就只能在哪个线程使用。
 全局变量：多线程共用，但是需要用到线程锁互斥, 否则结果会混乱。
 static：改变作用范围为本文件(不能被外部链接)，延长生命周期。
 extern：外部链接全局变量。
 switch: case后面不能直接定义变量, 否则编译不能通过。原因：作用域的问题。
 qt对数据库的使用：QSqlDatabase, QSqlQuery等。
 qt的TCP文件传输问题：{
                        1.write（），写入到本设备，需要等到下一个事件循环才会传输。
                        2.flush（），立刻传输。
                        3.每台机子有最大写入量，如果数据太大则不能一次性写入，然后发送给其他端。解决办法：分包发送。
                        4.特别耗时的传输(超大文件传输)，应该建立新的连接，客户端和服务端都有独立的线程处理该传输。
                     }
 
 Qml:
 Layout布局
 OpacityMask: 扣取图像。
 TextFiled: 输入框；validator: 限制输入(基于js的正则表达式)。
 Shape: 划线。
 CheckBox: 复选框。
 RadioButton: 单选框。
 信号与槽机制：如果主线程同时接收到多个信号，则按照队列依次执行。
 界面显示问题：如点击一个按钮需要显示一个小窗口，点击其他或再次点击按钮隐藏，focus控制应该放在按钮而不是小窗口。
 property string Id: 错误！！！名字声明不能大写。
 JS数组，Json数组：都可以是字典类型，但写法有所区别。
 ListView: ListModel->component使用数据不加modelData。
 
 
